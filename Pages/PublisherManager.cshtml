@page
@model Khronos4.Pages.PublisherManagerModel
@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "Publisher Manager - Khronos Pro 4";


}

<div class="page_heading">
    <h4>@Model.CongregationName Congregation</h4>
    <h5>Publisher Manager</h5>
    <p>
        <a href="/OCLMManager">Midweek Meeting Manager</a> |
        <a href="/PublicTalkManager">Weekend Meeting Manager</a>
    </p>
</div>

@* Display TempData Debug Messages *@
@* @if (TempData["DebugCongregationId"] != null)
{
    <div class="alert alert-info">
        @TempData["DebugCongregationId"]
    </div>
} *@

@* @if (TempData["DebugPublisherListCount"] != null)
{
    <div class="alert alert-info">
        @TempData["DebugPublisherListCount"]
    </div>
} *@

@* @if (TempData["DebugError"] != null)
{
    <div class="alert alert-danger">
        @TempData["DebugError"]
    </div>
} *@

@* @if (TempData["DebugReaderIndex"] != null)
{
    <div class="alert alert-danger">
        @TempData["DebugReaderIndex"]
    </div>
} *@

@* @if (TempData["DebugColumns"] != null)
{
    <div class="alert alert-danger">
        @Html.Raw(TempData["DebugColumns"].ToString())
    </div>
} *@

@* @if (TempData["DebugManagePublisher"] != null)
{
    <p>Manage Publisher Debug: @TempData["DebugManagePublisher"]</p>
} *@

@* @if (TempData["Debug"] != null)
{
    <div class="alert alert-info">
        @TempData["Debug"]
    </div>
} *@

@* @if (TempData["DebugFormValues"] != null)
{
    <div class="alert alert-info">
        @TempData["DebugFormValues"]
    </div>
} *@

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}

@if (TempData["UploadMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["UploadMessage"]
    </div>
}

@* ADD PUBLISHER AREA *@
<div class="upload-publishers-area">

    @* ADD PUBLISHER SINGLE *@
    <div class="form-container publisher-manager">
        <form method="post">
            <input type="hidden" asp-for="Publisher.Id">

            <div class="form-group-publisher-manager">
                <label>Full Name:</label>
                <input type="text" asp-for="Publisher.Name" required>
            </div>

            @* Ensure Congregation ID is correctly set as an integer *@
            <input type="hidden" asp-for="Publisher.Congregation" value="@Model.Publisher.Congregation" />

            <div class="form-group-publisher-manager">
                <label>Service Group:</label>
                <input type="number" asp-for="Publisher.ServiceGroup">
            </div>

            <div class="form-group-publisher-manager">
                <label>Privilege:</label>
                <select asp-for="Publisher.Privilege" required>
                    <option value="">-- Select Privilege --</option> 
                    <option value="Elder">Elder</option>
                    <option value="Servant">Servant</option>
                    <option value="Brother">Brother</option>
                    <option value="Sister">Sister</option>
                </select>
            </div>

            <div class="form-group-publisher-manager">
                <label>Regular Pioneer:</label>
                <select asp-for="Publisher.IsRP" class="form-control">
                    <option value="false">No</option>
                    <option value="true">Yes</option>
                </select>
            </div>

            <div class="form-group-publisher-manager">
                <label>Phone Number:</label>
                <input type="text" asp-for="Publisher.PhoneNumber" pattern="^\+?[1-9]\d{1,14}$"
                       title="Enter a valid phone number (e.g., +18181234567)" oninput="sanitizePhone(this)">
            </div>

            <div class="form-group-publisher-manager">
                <label>Email:</label>
                <input type="email" asp-for="Publisher.Email" />
            </div>

            <input type="hidden" asp-for="Publisher.Status" value="Active" />

            <div class="form-group-publisher-manager">
                <label>Notes:</label>
                <textarea asp-for="Publisher.Notes"></textarea>
            </div>

            <div class="form-group-publisher-manager">
                <button type="submit" asp-page-handler="AddPublisher">Add Publisher</button>
            </div>
        </form>
    </div>

    @* ADD PUBLISHER BULK *@
    <div class="form-container publisher-manager">
        <div>
            <strong>Bulk Upload Tool</strong>
            <p>
                Use this tool to upload an Excel .CSV file to add multiple publishers. Download this
                <a href="./templates/UploadPublishersTemplate.csv">Excel CSV File</a> for the proper CSV format.
            </p>
        </div>

        <div class="csv-example-container">
            <p><strong>Example of Excel .CSV file</strong></p>
            <img src="~/images/BulkImportTemplate.png" alt="CSV Example" class="csv-example-image" />
        </div>

        <div class="form-group-publisher-manager">
            <form method="post" enctype="multipart/form-data">
                <input type="file" name="csvFile" accept=".csv" class="csv-input">
                <button type="submit" asp-page-handler="BulkUpload" class="csv-upload-btn">Bulk Upload</button>
            </form>
        </div>
    </div>

</div>

@* BULK ADD PUBLISHER PREVIEW *@
<div class="full-width-container">
    <center>
        @if (HttpContext.Session.GetString("BulkUploadPreview") != null)
        {
            var serializedPreview = HttpContext.Session.GetString("BulkUploadPreview");
            var previewList = System.Text.Json.JsonSerializer.Deserialize<List<Khronos4.Models.CSVPublisher>>(serializedPreview);

            if (previewList != null && previewList.Any())
            {
                <strong>Preview CSV Upload</strong>
                <table class="publisher-table">
                    <thead>
                        <tr>
                            <th>Full Name</th>
                            <th>Service Group</th>
                            <th>Privilege</th>
                            <th>Phone #</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var pub in previewList)
                        {
                            <tr>
                                <td>@pub.Name</td>
                                <td>@pub.ServiceGroup</td>
                                <td>@pub.Privilege</td>
                                <td>@(string.IsNullOrWhiteSpace(pub.PhoneNumber) ? "N/A" : pub.PhoneNumber)</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <form method="post">
                    <button type="submit" asp-page-handler="ConfirmBulkUpload" class="btn btn-success">Confirm Upload</button>
                </form>
            }
            else
            {
                <p>No records to preview.</p>
            }
        }
    </center>
</div>

@* CURRENT PUBLISHERS *@
@if (Model.PublisherList != null && Model.PublisherList.Any())
{
    int totalPublishers = Model.PublisherList.Count;
    int totalElders = Model.PublisherList.Count(p => p.Privilege == "Elder");
    int totalServants = Model.PublisherList.Count(p => p.Privilege == "Servant");
    int totalPioneers = Model.PublisherList.Count(p => p.IsRP);
    int totalBrothers = totalElders + totalServants + Model.PublisherList.Count(p => p.Privilege == "Brother");
    int totalSisters = Model.PublisherList.Count(p => p.Privilege == "Sister");

    var serviceGroups = Model.PublisherList.Select(p => p.ServiceGroup).Distinct().OrderBy(sg => sg).ToList();

    <div class="summary-table-container">
        <table class="summary-table">
            <thead>
                <tr>
                    <th class="elder-bg">Elders</th>
                    <th class="servant-bg">Servants</th>
                    <th class="rp-highlight">RPs</th>
                    <th class="brother-bg">Brothers</th>
                    <th class="sister-bg">Sisters</th>
                    <th class="publisher-bg">Publishers</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="elder-bg">@totalElders</td>
                    <td class="servant-bg">@totalServants</td>
                    <td class="rp-highlight">@totalPioneers</td>
                    <td class="brother-bg">@totalBrothers</td>
                    <td class="sister-bg">@totalSisters</td>
                    <td class="publisher-bg">@totalPublishers</td>
                </tr>
            </tbody>
        </table>
    </div>

    @* SERVICE GROUPS *@
    <div class="dynamic-groups-container">
        <table class="dynamic-groups-table" id="serviceGroupsTable">
            <thead>
                <tr>
                    @foreach (var group in serviceGroups)
                    {
                        <th>Group @group</th>
                    }
                </tr>
            </thead>
            <tbody>
                <tr>
                    @foreach (var group in serviceGroups)
                    {
                        <td>
                            @{
                                var groupMembers = Model.PublisherList
                                .Where(p => p.ServiceGroup == group)
                                .OrderBy(p => p.IsCBSOverseer ? 0 :
                                p.IsCBSAssistant ? 1 :
                                p.Privilege == "Elder" ? 2 :
                                p.Privilege == "Servant" ? 3 :
                                p.Privilege == "Brother" ? 4 : 5)
                                .ToList();
                            }

                            @if (groupMembers.Any())
                            {
                                <ol>
                                    @foreach (var member in groupMembers)
                                    {
                                        string roleSuffix = member.IsCBSOverseer ? " (Overseer)" :
                                        member.IsCBSAssistant ? " (Assistant)" : "";

                                        <li class="@member.Privilege.ToLower()-row">
                                            @member.Name @roleSuffix
                                        </li>
                                    }
                                </ol>
                            }
                            else
                            {
                                <p>No members</p>
                            }
                        </td>
                    }
                </tr>
            </tbody>
        </table>
        <br>
        @* <button id="downloadWordButton" class="btn-download">Download as Word</button> *@
        <button id="printCBSButton" class="btn-print">Print Service Groups</button>
    </div>
    
    @* ALL PUBLISHERS *@
    <div class="full-width-container">
        <table class="publisher-table" id="all-publishers-table">
            <thead>
                <tr>
                    <th class="col-id">#</th>
                    <th class="col-privilege">Privilege</th>
                    <th class="col-name">Name</th>
                    <th class="col-sgroup">Group</th>
                    <th class="col-cbsOverseer">Overseer</th>
                    <th class="col-cbsassistant">Assistant</th>
                    <th class="col-rp">RP</th>
                    <th class="col-phone">Phone</th>
                    @* <th class="col-notes">Notes</th> *@
                    <th class="col-actions">Actions</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int i = 1;
                }
                @foreach (var publisher in Model.PublisherList)
                {
                    // Set row class based on Privilege
                    string rowClass = publisher.Privilege switch
                    {
                        "Elder" => "elder-row",
                        "Servant" => "servant-row",
                        "Brother" => "brother-row",
                        "Sister" => "sister-row",
                        _ => ""
                    };

                    // Check if RP should be highlighted
                    string rpClass = publisher.IsRP ? "rp-highlight" : "";

                    <tr class="@rowClass">
                        <form method="post">
                        <td>@i @{
                                    i++;
                                }
                        </td>
                        <td>
                            <select name="privilege" class="privilege-dropdown" data-row="@i">
                                <option value="Elder" selected="@(publisher.Privilege == "Elder" ? "selected" : null)">Elder</option>
                                <option value="Servant" selected="@(publisher.Privilege == "Servant" ? "selected" : null)">Servant</option>
                                <option value="Brother" selected="@(publisher.Privilege == "Brother" ? "selected" : null)">Brother</option>
                                <option value="Sister" selected="@(publisher.Privilege == "Sister" ? "selected" : null)">Sister</option>
                            </select>
                        </td>
                        <td>
                            <input type="text" name="name" value="@publisher.Name" required class="fit-content-input">
                        </td>
                        <td>
                            <input type="text" name="serviceGroup" value="@publisher.ServiceGroup" pattern="[0-9]*" title="Enter a number" required class="fit-content-input">
                        </td>
                       
                        <td>
                            <div class="cbs-checkboxes">
                                    @if (publisher.Privilege == "Elder")
                                    {
                                    <label>
                                        <input type="checkbox" name="isCBSOverseer" value="true"
                                            @(publisher.IsCBSOverseer ? "checked" : "")>
                                    </label>
                                    }
                            </div>
                        </td>
                        <td>
                            <div class="cbs-checkboxes">
                                    @if (publisher.Privilege == "Elder" || publisher.Privilege == "Servant")
                                    {
                                    <label>
                                        <input type="checkbox" name="isCBSAssistant" value="true"
                                            @(publisher.IsCBSAssistant ? "checked" : "")>
                                    </label>
                                    }
                            </div>
                        </td>
                        <td class="@rpClass">
                            <center>
                            <select name="isRP" class="form-control" onchange="updateIsRP('@publisher.Id', this.value)">
                                <option value="true" selected="@(publisher.IsRP ? "selected" : null)">Yes</option>
                                <option value="false" selected="@(!publisher.IsRP ? "selected" : null)">No</option>
                            </select>
                            </center>
                        </td>
                        <td>
                            <input type="text" name="phoneNumber" value="@publisher.PhoneNumber" pattern="^\+?[1-9]\d{1,14}$"
                                   title="Enter a valid phone number (e.g., +18181234567)" oninput="sanitizePhone(this)" class="fit-content-input">
                        </td>
                       @*  <td>
                            <textarea name="notes" rows="2" class="notes-box">@publisher.Notes</textarea>
                        </td> *@
                        <td>
                            <input type="hidden" name="id" value="@publisher.Id">
                            <button type="submit" asp-page-handler="EditPublisher">Update</button>
                            <button class="btn-danger" type="submit" asp-page-handler="DeletePublisher"
                                    onclick="return confirm('Are you sure you want to delete @publisher.Name?');">
                                Delete
                            </button>
                        </td>
                        </form>
                    </tr>
                }
            </tbody>
        </table>
        <button id="printPubButton" class="btn-print">Print All Publishers</button>
    </div>
}
else
{
    <div class="full-width-container">
        <br />
        <p>No publishers entered yet. Please add publisher's names.</p>
    </div>
}
